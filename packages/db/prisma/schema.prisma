// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Пользователи
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  passwordHash  String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tickets       Ticket[]  // Связь с заявками
  handledTickets Ticket[] @relation("TicketHandler") // Заявки в обработке
  telegramId    String?   // ID в телеграме
}

// Роли пользователей
enum Role {
  USER
  ADMIN
  SUPPORT
}

// Заявки
model Ticket {
  id          String        @id @default(cuid())
  title       String
  description String
  status      TicketStatus  @default(PENDING)
  priority    Priority      @default(MEDIUM)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  comments    Comment[]

  // Связь с обработчиком заявки
  handlerId   String?
  handler     User?         @relation("TicketHandler", fields: [handlerId], references: [id])
}

// Статусы заявок
enum TicketStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
  CANCELED
}

// Приоритеты
enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

// Комментарии к заявкам
model Comment {
  id        String    @id @default(cuid())
  text      String
  createdAt DateTime  @default(now())
  ticketId  String
  ticket    Ticket    @relation(fields: [ticketId], references: [id])
}

// Токены авторизации Telegram
model TelegramAuthToken {
  id        String    @id @default(cuid())
  token     String    @unique
  email     String?   // Email пользователя (если это вход)
  expires   DateTime  // Время истечения токена
  userId    String?   // ID пользователя, если уже связан
  isUsed    Boolean   @default(false)
  createdAt DateTime  @default(now())
} 